{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Dev/FrontEndChatterBox/src/components/ChatRoom/ChatRoom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, FormControl, Input } from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport \"./ChatRoom.css\";\nimport useChat from \"../useChat/useChat\";\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatRoom = props => {\n  _s();\n\n  const {\n    roomId\n  } = props.match.params; // Gets roomId from URL\n\n  const {\n    messages,\n    sendMessage\n  } = useChat(roomId); // Creates a websocket and manages messaging\n\n  const [newMessage, setNewMessage] = React.useState(\"\"); // Message to be sent\n\n  const user = JSON.parse(localStorage.getItem('user'));\n  const {\n    id,\n    token,\n    username\n  } = user;\n  const history = useHistory();\n\n  const handleNewMessageChange = event => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = async event => {\n    event.preventDefault();\n    sendMessage(newMessage);\n    const response = await axios({\n      method: 'post',\n      url: 'http://localhost:8080/message/create',\n      data: {\n        profile: user,\n        body: newMessage\n      },\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    console.log(response.data);\n    setNewMessage('');\n  };\n\n  const goToProfile = event => {\n    event.preventDefault();\n    history.push(`/profile/${username}`);\n  };\n\n  useEffect(async () => {\n    console.log(token);\n    const response = await axios({\n      method: 'get',\n      url: `http://localhost:8080/message/all`,\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    console.log(response);\n\n    if (response.data.length > 0) {\n      response.data.map(message => sendMessage(message.body));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"room-name\",\n      children: [\"Channel: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"go-back\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n        className: \"ArrowBack_icon link\",\n        onClick: goToProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 31\n      }, this), \"Return To Profile \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"messages-list\",\n        children: messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `message-item ${message.ownedByCurrentUser ? \"my-message\" : \"received-message\"}`,\n          children: message.body\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: newMessage,\n          onChange: handleNewMessageChange,\n          placeholder: \"Write message...\",\n          className: \"new-message-input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !newMessage,\n          onClick: handleSendMessage,\n          type: \"submit\",\n          className: \"send-message-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatRoom, \"f0AXon1UVvNkCCDuPp6L4lh8gsc=\", false, function () {\n  return [useChat, useHistory];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/Users/laura/Dev/FrontEndChatterBox/src/components/ChatRoom/ChatRoom.jsx"],"names":["React","useEffect","useState","Button","FormControl","Input","ArrowBackIcon","useChat","useHistory","axios","ChatRoom","props","roomId","match","params","messages","sendMessage","newMessage","setNewMessage","user","JSON","parse","localStorage","getItem","id","token","username","history","handleNewMessageChange","event","target","value","handleSendMessage","preventDefault","response","method","url","data","profile","body","headers","console","log","goToProfile","push","length","map","message","i","ownedByCurrentUser"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {Button, FormControl, Input} from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport \"./ChatRoom.css\";\nimport useChat from \"../useChat/useChat\";\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\n\n\n\nconst ChatRoom = (props) => {\n  const { roomId } = props.match.params; // Gets roomId from URL\n  const { messages, sendMessage } = useChat(roomId); // Creates a websocket and manages messaging\n  const [newMessage, setNewMessage] = React.useState(\"\"); // Message to be sent\n  const user = JSON.parse(localStorage.getItem('user'));\n  const { id, token, username } = user;\n  const history = useHistory();\n\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n \n  const handleSendMessage = async (event) => {\n    event.preventDefault();\n    sendMessage(newMessage);\n    const response = await axios({\n        method: 'post',\n        url: 'http://localhost:8080/message/create',\n        data: {\n            profile: user,\n            body: newMessage,\n        },\n        headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`}\n    });\n    console.log(response.data)\n    setNewMessage('');\n};\n\n  const goToProfile= (event) => {\n    event.preventDefault();\n    history.push(`/profile/${username}`);\n}\n\nuseEffect( async () => {\n  console.log(token);\n  const response = await axios({\n      method: 'get',\n      url: `http://localhost:8080/message/all`,\n      headers: { 'Authorization': `Bearer ${token}`}\n  });\n  console.log(response)\n  if (response.data.length > 0) {\n      response.data.map(message => sendMessage(message.body));\n  }\n\n}, [])\n\n  return (\n    \n    <div className=\"chat-room-container\">\n      <h1 className=\"room-name\">Channel: {roomId}</h1>\n      <h2 className=\"go-back\"><ArrowBackIcon className='ArrowBack_icon link' onClick={goToProfile}/>  \n      Return To Profile </h2>\n      <div className=\"messages-container\">\n      <div>\n\n    </div>\n        <ol className=\"messages-list\">\n          {messages.map((message, i) => (\n            <li\n              key={i}\n              className={`message-item ${\n                message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\n              }`}\n            >\n              {message.body}\n            </li>\n          ))}\n        </ol>\n      </div>\n\n      <form>\n      <FormControl>\n      <Input      \n        value={newMessage}\n        onChange={handleNewMessageChange}\n        placeholder=\"Write message...\"\n        className=\"new-message-input-field\"\n      />\n      \n      <Button disabled={!newMessage} onClick={handleSendMessage} type=\"submit\" className=\"send-message-button\">\n        Send\n      </Button>\n      </FormControl>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}