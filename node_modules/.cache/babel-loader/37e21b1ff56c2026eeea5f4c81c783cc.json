{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Button, FormControl, InputLabel, Input } from '@material-ui/core';\n// import './App.css';\n// import Message from './components/message/Message';\n// import Icon from '@material-ui/core/Icon';\n// import { makeStyles } from '@material-ui/core/styles';\n// //why are we using REACT instead of Angular? React is much more popular, it is growing and very in demand, it is super light weight\n// //the angular framebook needs a lot more to get it going, everything in angular can be done with react \n// //using material UI because google and more modern \n// function App() {\n//   const [input, setInput] = useState('');\n//   //const [messages, setMessages] = useState([{ username: 'tatiana', message: 'hey' }, { username: 'miles', message: 'hello' }]);\n//   //objects so that they can have a user and piece of text\n//   //in order to store anything we always need to think about state\n//   const [username, setUsername] = useState(''); \n//   //start with blank string because no user will have a name beforehand and this was setting up a hook \n//   //need another hook called userEffect this allows the code to run once when the component loads\n//   //difference btwn useState and useEffect, the useState sets up a kind of short term memory when page is restarted and is a way to set up variable in react\n//   //useEffect is a block of code that gets executed based on a condition \n//   //you can have several useEffect, many that you need for specified condition\n//   // useEffect(() => {\n//   //run once when the app component loads\n//   //all the documents are held inside snapshot below (docs are metadata)\n//   //iterating through each document and getting the data from that document \n//   //   db.collection('messages').onSnapshot(snapshot => {\n//   //     setMessages(snapshot.docs.map(doc => doc.data()))  \n//   //   })\n//   // }, [] )\n//   useEffect(() => {\n//     //run code here\n//     setUsername(prompt('Please enter your name'));\n//   }, []) //condition, map this to a variable, if blank it runs code once when app component loads, if input now everytime input changes the code runs everytime\n// // //  const sendMessage = (event) => {\n// //     // all the logic to send a message goes here \n// //     event.preventDefault(); \n// //     //prevents the refresh from taking place upon hitting enter or \"send message\" button\n// //    // setMessages([...messages, { username: username, message: input }]) \n// //     //this adds the new message to the end of the array\n// //     setInput(''); \n// //     //clear input so that when the message bar is cleared\n// //   }\n// //   //below I have added capital b Button to change the look of the button, I had to add Material UI\n// //   //Can go to the https://material-ui.com/components/buttons/\n// //   //disabled prevents sending empty\n// //   //components are a powerful part of react, resuable allows you to write it once, can pass 'props' (properties) in and it allows you to \n// //   //change message contents\n//   const useStyles = makeStyles((theme) => ({\n//     button: {\n//       margin: theme.spacing(1),\n//     },\n//   }));\n//   const classes = useStyles();\n//   return (\n//     <div className=\"App\">\n//       <h1>Hello Chatter!</h1>\n//       <img src=\"ChatterBoxLogo.png\" className=\"Logo\" alt=\"ChatterBox Logo\" width=\"192\" height=\"160\" />\n//       <h2>Welcome {username}</h2>\n//       {/* <form>\n//         <FormControl>\n//           <InputLabel >Message...</InputLabel>\n//           <Input value={input} onChange={event => setInput(event.target.value)} />\n//           <Button disabled={!input} variant=\"contained\" color=\"primary\" className={classes.button} endIcon={<Icon>send</Icon>} type='submit' onClick={sendMessage}> Send </Button>\n//           <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n//         </FormControl>\n//       </form>\n//        */}\n//       {/* {\n//         messages.map(message => (\n//           <Message username={username} message={message} /> //the person who has logged in and their message\n//         ))\n//       } */}\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/laura/Dev/FrontEndChatterBox/src/App.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { Button, FormControl, InputLabel, Input } from '@material-ui/core';\n// import './App.css';\n// import Message from './components/message/Message';\n// import Icon from '@material-ui/core/Icon';\n// import { makeStyles } from '@material-ui/core/styles';\n\n\n\n\n// //why are we using REACT instead of Angular? React is much more popular, it is growing and very in demand, it is super light weight\n// //the angular framebook needs a lot more to get it going, everything in angular can be done with react \n// //using material UI because google and more modern \n\n// function App() {\n//   const [input, setInput] = useState('');\n//   //const [messages, setMessages] = useState([{ username: 'tatiana', message: 'hey' }, { username: 'miles', message: 'hello' }]);\n  \n//   //objects so that they can have a user and piece of text\n//   //in order to store anything we always need to think about state\n\n\n//   const [username, setUsername] = useState(''); \n  \n  \n//   //start with blank string because no user will have a name beforehand and this was setting up a hook \n//   //need another hook called userEffect this allows the code to run once when the component loads\n//   //difference btwn useState and useEffect, the useState sets up a kind of short term memory when page is restarted and is a way to set up variable in react\n//   //useEffect is a block of code that gets executed based on a condition \n//   //you can have several useEffect, many that you need for specified condition\n\n//   // useEffect(() => {\n//   //run once when the app component loads\n//   //all the documents are held inside snapshot below (docs are metadata)\n//   //iterating through each document and getting the data from that document \n//   //   db.collection('messages').onSnapshot(snapshot => {\n//   //     setMessages(snapshot.docs.map(doc => doc.data()))  \n//   //   })\n//   // }, [] )\n\n\n//   useEffect(() => {\n//     //run code here\n//     setUsername(prompt('Please enter your name'));\n//   }, []) //condition, map this to a variable, if blank it runs code once when app component loads, if input now everytime input changes the code runs everytime\n\n\n\n\n  \n// // //  const sendMessage = (event) => {\n// //     // all the logic to send a message goes here \n    \n// //     event.preventDefault(); \n// //     //prevents the refresh from taking place upon hitting enter or \"send message\" button\n    \n// //    // setMessages([...messages, { username: username, message: input }]) \n// //     //this adds the new message to the end of the array\n\n// //     setInput(''); \n// //     //clear input so that when the message bar is cleared\n// //   }\n\n// //   //below I have added capital b Button to change the look of the button, I had to add Material UI\n// //   //Can go to the https://material-ui.com/components/buttons/\n// //   //disabled prevents sending empty\n// //   //components are a powerful part of react, resuable allows you to write it once, can pass 'props' (properties) in and it allows you to \n// //   //change message contents\n\n\n//   const useStyles = makeStyles((theme) => ({\n//     button: {\n//       margin: theme.spacing(1),\n//     },\n//   }));\n\n//   const classes = useStyles();\n//   return (\n//     <div className=\"App\">\n//       <h1>Hello Chatter!</h1>\n//       <img src=\"ChatterBoxLogo.png\" className=\"Logo\" alt=\"ChatterBox Logo\" width=\"192\" height=\"160\" />\n//       <h2>Welcome {username}</h2>\n\n//       {/* <form>\n\n//         <FormControl>\n//           <InputLabel >Message...</InputLabel>\n//           <Input value={input} onChange={event => setInput(event.target.value)} />\n//           <Button disabled={!input} variant=\"contained\" color=\"primary\" className={classes.button} endIcon={<Icon>send</Icon>} type='submit' onClick={sendMessage}> Send </Button>\n//           <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n//         </FormControl>\n//       </form>\n//        */}\n//       {/* {\n//         messages.map(message => (\n//           <Message username={username} message={message} /> //the person who has logged in and their message\n//         ))\n//       } */}\n//     </div>\n\n//   );\n// }\n\n// export default App;\n\n\n"]},"metadata":{},"sourceType":"module"}