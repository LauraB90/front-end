{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Dev/FrontEndChatterBox/src/components/direct-messages/dmChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { SearchBar } from './searchBar';\nimport axios from 'axios';\nimport useChat from \"../useChat/useChat\";\nimport { FormControl, Button, Input } from '@material-ui/core';\nimport '../ChatRoom/ChatRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DmChat = props => {\n  _s();\n\n  const {\n    id,\n    username,\n    token,\n    email\n  } = JSON.parse(localStorage.getItem('user'));\n  console.log(token);\n  const {\n    dmChatName\n  } = props.match.params;\n  const [newMessage, setNewMessage] = useState(\"\");\n  const {\n    messages,\n    sendMessage\n  } = useChat(dmChatName);\n  const [messageHistory, setMessageHistory] = useState([]);\n  console.log(dmChatName);\n  console.log(dmChatName.substring(dmChatName.indexOf('&' + 1)));\n\n  const handleNewMessageChange = event => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = async event => {\n    event.preventDefault(); //sendMessage(newMessage);\n\n    const response = await axios({\n      method: 'post',\n      url: 'http://localhost:8080/message/create',\n      data: {\n        profileSentFrom: username,\n        body: newMessage,\n        channelName: dmChatName\n      },\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    console.log(response.data);\n    sendMessage(response.data);\n    setNewMessage('');\n  };\n\n  const persistMessage = message => {// const response = axios({\n    //     method: 'post',\n    //     url: 'http://localhost:8080/message/create',\n    //     data: {\n    //         body: message,\n    //     },\n    //     headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`}\n    // });\n    // console.log(response.data)\n  };\n\n  useEffect(async () => {\n    console.log(token);\n    const response = await axios({\n      method: 'get',\n      url: `http://localhost:8080/message/find/${dmChatName}`,\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    console.log(response);\n\n    if (response.data.length > 0) {\n      response.data.map(message => sendMessage(message));\n    } // if (response.data) {\n    //     const dmChannels = response.data.filter(channel => channel.type === 'DM');\n    //     const dmChannelWithChosenUser = dmChannels.filter(channel => channel.name.toLowerCase().includes())\n    // }\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text__align\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dmChat__searchbar\",\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dm-chat-name\",\n      children: [\"DM Chat \", dmChatName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"messages-list\",\n        children: messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"message-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [username, \" @ \", message.timestamp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: newMessage,\n          onChange: handleNewMessageChange,\n          placeholder: \"Write message...\",\n          className: \"new-message-input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !newMessage,\n          onClick: handleSendMessage,\n          type: \"submit\",\n          className: \"send-message-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DmChat, \"+PKMu5vjLqiAYth7hC6EDewiBVk=\", false, function () {\n  return [useChat];\n});\n\n_c = DmChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"DmChat\");","map":{"version":3,"sources":["/Users/laura/Dev/FrontEndChatterBox/src/components/direct-messages/dmChat.js"],"names":["React","useEffect","useState","SearchBar","axios","useChat","FormControl","Button","Input","DmChat","props","id","username","token","email","JSON","parse","localStorage","getItem","console","log","dmChatName","match","params","newMessage","setNewMessage","messages","sendMessage","messageHistory","setMessageHistory","substring","indexOf","handleNewMessageChange","event","target","value","handleSendMessage","preventDefault","response","method","url","data","profileSentFrom","body","channelName","headers","persistMessage","message","length","map","i","timestamp"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SearchBar } from './searchBar';\nimport axios from 'axios';\nimport useChat from \"../useChat/useChat\";\nimport { FormControl, Button, Input } from '@material-ui/core';\nimport '../ChatRoom/ChatRoom.css';\n\nexport const DmChat = (props) => {\n    \n    const { id, username, token, email } = JSON.parse(localStorage.getItem('user'));\n    console.log(token);\n    const { dmChatName } = props.match.params;\n    const [newMessage, setNewMessage] = useState(\"\");\n    const { messages, sendMessage } = useChat(dmChatName);\n    const [messageHistory, setMessageHistory] = useState([]);\n    console.log(dmChatName);\n    console.log(dmChatName.substring(dmChatName.indexOf('&' + 1)));\n    \n    const handleNewMessageChange = (event) => {\n        setNewMessage(event.target.value);\n    };\n\n    const handleSendMessage = async (event) => {\n        event.preventDefault();\n        //sendMessage(newMessage);\n        const response = await axios({\n            method: 'post',\n            url: 'http://localhost:8080/message/create',\n            data: {\n                profileSentFrom: username,\n                body: newMessage,\n                channelName: dmChatName,\n            },\n            headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`}\n        });\n        console.log(response.data)\n        sendMessage(response.data);\n        setNewMessage('');\n    };\n\n    const persistMessage = (message) => {\n        // const response = axios({\n        //     method: 'post',\n        //     url: 'http://localhost:8080/message/create',\n        //     data: {\n        //         body: message,\n        //     },\n        //     headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`}\n        // });\n        // console.log(response.data)\n    }\n\n    useEffect( async () => {\n        console.log(token);\n        const response = await axios({\n            method: 'get',\n            url: `http://localhost:8080/message/find/${dmChatName}`,\n            headers: { 'Authorization': `Bearer ${token}`}\n        });\n        console.log(response)\n        if (response.data.length > 0) {\n            response.data.map(message => sendMessage(message));\n        }\n        // if (response.data) {\n        //     const dmChannels = response.data.filter(channel => channel.type === 'DM');\n        //     const dmChannelWithChosenUser = dmChannels.filter(channel => channel.name.toLowerCase().includes())\n        // }\n    }, [])\n\n    return (\n        <div className='text__align'>\n            \n            <div className='dmChat__searchbar'>\n                <SearchBar  />\n            </div>\n           \n            <h1 className='dm-chat-name'>DM Chat {dmChatName}</h1>\n            \n            {/* <textarea\n                value={newMessage}\n                onChange={handleNewMessageChange}\n                placeholder=\"Write message...\"\n                className=\"new-message-input-field\" />\n            <button onClick={handleSendMessage} className=\"send-message-button\">\n                Send\n            </button> */}\n            <div className=\"messages-container\">\n                <ol className=\"messages-list\">\n                {messages.map((message, i) => (\n                    <li key={i} className='message-item' >\n                    <p>{username} @ {message.timestamp}</p>\n                    <p>{message.body}</p>\n                    </li>\n                    ))}\n                </ol>\n            </div>\n\n            <form>\n            <FormControl>\n                <Input      \n                    value={newMessage}\n                    onChange={handleNewMessageChange}\n                    placeholder=\"Write message...\"\n                    className=\"new-message-input-field\" />\n      \n                <Button disabled={!newMessage} onClick={handleSendMessage} type=\"submit\" className=\"send-message-button\">\n                    Send\n                </Button>\n            </FormControl>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}